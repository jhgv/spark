/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 22 02:06:07 GMT 2018
 */

package spark.resource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.net.URLConnection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import spark.resource.ExternalResource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExternalResource_ESTest extends ExternalResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("org.codehaus.classworlds.BytesURLConnection");
      externalResource0.getURI();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.codehaus.classworlds.BytesURLConnection");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)11;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      externalResource0.isReadable();
      externalResource0.getInputStream();
      externalResource0.equals("org.codehaus.classworlds.BytesURLConnection");
      externalResource0.getDescription();
      externalResource0.exists();
      externalResource0.lastModified();
      externalResource0.contentLength();
      externalResource0.lastModified();
      externalResource0.exists();
      externalResource0.equals("org.codehaus.classworlds.BytesURLConnection");
      externalResource0.getPath();
      externalResource0.isDirectory();
      externalResource0.getURL();
      externalResource0.isDirectory();
      externalResource0.lastModified();
      externalResource0.toString();
      URLConnection uRLConnection0 = mock(URLConnection.class, new ViolatedAssumptionAnswer());
      externalResource0.customizeConnection(uRLConnection0);
      externalResource0.contentLength();
      externalResource0.getInputStream();
      externalResource0.isDirectory();
      externalResource0.isDirectory();
      externalResource0.getURL();
      externalResource0.getInputStream();
      externalResource0.getDescription();
      externalResource0.getPath();
      externalResource0.toString();
      externalResource0.getURL();
      externalResource0.getInputStream();
      externalResource0.getPath();
      externalResource0.isDirectory();
      externalResource0.getInputStream();
      externalResource0.getURL();
      externalResource0.getPath();
      externalResource0.getURL();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExternalResource externalResource0 = null;
      try {
        externalResource0 = new ExternalResource((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("");
      externalResource0.isDirectory();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("l");
      externalResource0.exists();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("]");
      externalResource0.isDirectory();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource(";X +Xx^hIr:}T:");
      externalResource0.getDescription();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("#S");
      externalResource0.getURL();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("resource input stream must not be null");
      externalResource0.getPath();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "";
      ExternalResource externalResource0 = new ExternalResource("");
      try { 
        externalResource0.getInputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("25*y,!?");
      externalResource0.getDescription();
      try { 
        externalResource0.getInputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("");
      externalResource0.contentLength();
      externalResource0.getFileForLastModifiedCheck();
      externalResource0.getPath();
      externalResource0.exists();
      externalResource0.getPath();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExternalResource externalResource0 = new ExternalResource("Cannot create a relative resource for ");
      externalResource0.isDirectory();
      try { 
        externalResource0.getInputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}

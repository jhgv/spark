/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 22 02:06:01 GMT 2018
 */

package spark.http.matching;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.servlet.http.HttpServletRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import spark.Response;
import spark.http.matching.Body;
import spark.http.matching.RequestWrapper;
import spark.http.matching.ResponseWrapper;
import spark.http.matching.RouteContext;
import spark.route.HttpMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RouteContext_ESTest extends RouteContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withResponse((Response) null);
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext2 = routeContext1.withMatcher(routes0);
      RouteContext routeContext3 = routeContext2.withResponseWrapper((ResponseWrapper) null);
      RouteContext routeContext4 = routeContext3.withAcceptType("D;(layVb");
      RouteContext routeContext5 = routeContext1.withUri("D;(layVb");
      RouteContext routeContext6 = routeContext3.withMatcher(routes0);
      routeContext5.withMatcher(routes0);
      routeContext2.uri();
      routeContext2.requestWrapper();
      HttpMethod httpMethod0 = HttpMethod.trace;
      routeContext5.withHttpMethod(httpMethod0);
      routeContext3.responseWrapper();
      routeContext1.withUri("Kb&WB");
      routeContext4.withUri("D;(layVb");
      routes0.clear();
      routeContext5.requestWrapper();
      routeContext0.withUri("");
      routeContext2.withAcceptType("D;(layVb");
      HttpMethod httpMethod1 = HttpMethod.get;
      routeContext1.withHttpMethod(httpMethod1);
      routeContext0.response();
      routeContext3.httpRequest();
      RouteContext.create();
      Body body0 = Body.create();
      routeContext4.withBody(body0);
      routeContext2.httpRequest();
      routeContext6.uri();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withAcceptType((String) null);
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext2 = routeContext1.withResponseWrapper(responseWrapper0);
      responseWrapper0.getDelegate();
      RouteContext routeContext3 = routeContext2.withResponse((Response) null);
      RouteContext routeContext4 = routeContext3.withHttpRequest((HttpServletRequest) null);
      HttpMethod httpMethod0 = HttpMethod.unsupported;
      RouteContext routeContext5 = routeContext4.withHttpMethod(httpMethod0);
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext5.withRequestWrapper(requestWrapper0);
      routeContext3.httpMethod();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      HttpMethod httpMethod0 = HttpMethod.head;
      RouteContext routeContext1 = routeContext0.withHttpMethod(httpMethod0);
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext2 = routeContext1.withResponseWrapper(responseWrapper0);
      Body body0 = Body.create();
      Object object0 = new Object();
      body0.set(object0);
      RouteContext routeContext3 = routeContext2.withBody(body0);
      RouteContext.create();
      RouteContext routeContext4 = routeContext2.withResponse(responseWrapper0);
      String string0 = null;
      routeContext3.withUri((String) null);
      routeContext4.withAcceptType((String) null);
      routeContext2.body();
      routeContext3.withResponseWrapper(responseWrapper0);
      RouteContext routeContext5 = routeContext1.withAcceptType("4!c)");
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext5.withBody(body0);
      // Undeclared exception!
      try { 
        requestWrapper0.raw();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.http.matching.RequestWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext1 = routeContext0.withResponse(responseWrapper0);
      routeContext1.withUri("E^x7?]F|]@w?5m~");
      RouteContext routeContext2 = routeContext1.withUri(".nDpdtQ},Rs`&et)g\"`");
      RouteContext routeContext3 = routeContext2.withAcceptType(".nDpdtQ},Rs`&et)g\"`");
      routeContext3.routeMatcher();
      routeContext0.withUri(".nDpdtQ},Rs`&et)g\"`");
      routeContext2.response();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      HttpMethod httpMethod0 = HttpMethod.unsupported;
      RouteContext routeContext1 = routeContext0.withHttpMethod(httpMethod0);
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext2 = routeContext1.withResponse(responseWrapper0);
      Body body0 = Body.create();
      RouteContext routeContext3 = routeContext2.withBody(body0);
      RouteContext routeContext4 = routeContext0.withAcceptType("}Q<W");
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      RouteContext routeContext5 = routeContext4.withRequestWrapper(requestWrapper0);
      routeContext1.uri();
      routeContext3.responseWrapper();
      routeContext2.requestWrapper();
      routeContext4.withResponse(responseWrapper0);
      routeContext0.acceptType();
      HttpMethod httpMethod1 = HttpMethod.trace;
      RouteContext routeContext6 = routeContext4.withHttpMethod(httpMethod1);
      routeContext5.requestWrapper();
      routeContext4.withUri((String) null);
      RouteContext routeContext7 = routeContext4.withHttpRequest((HttpServletRequest) null);
      routeContext3.withAcceptType((String) null);
      RouteContext routeContext8 = routeContext6.withResponse((Response) null);
      routeContext8.requestWrapper();
      routeContext7.uri();
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext9 = routeContext5.withMatcher(routes0);
      routeContext8.withAcceptType("");
      routeContext5.response();
      routeContext9.httpRequest();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext1 = routeContext0.withResponse(responseWrapper0);
      RouteContext.create();
      RouteContext.create();
      routeContext1.withResponse(responseWrapper0);
      routeContext1.withUri("");
      routeContext0.uri();
      RouteContext.create();
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext2 = routeContext0.withMatcher(routes0);
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext0.withRequestWrapper(requestWrapper0);
      Body body0 = Body.create();
      Object object0 = new Object();
      body0.set(object0);
      routeContext2.withBody(body0);
      routeContext2.routeMatcher();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.httpRequest();
      routeContext0.requestWrapper();
      RouteContext routeContext1 = routeContext0.withAcceptType("<");
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext2 = routeContext0.withResponseWrapper(responseWrapper0);
      RouteContext routeContext3 = routeContext1.withAcceptType("Q");
      RouteContext routeContext4 = routeContext2.withHttpRequest((HttpServletRequest) null);
      routeContext2.withUri("Q");
      RouteContext routeContext5 = routeContext3.withResponseWrapper(responseWrapper0);
      spark.route.Routes routes0 = spark.route.Routes.create();
      routeContext2.withMatcher(routes0);
      Body body0 = Body.create();
      routeContext4.withBody(body0);
      routeContext1.withHttpRequest((HttpServletRequest) null);
      routeContext4.requestWrapper();
      routeContext5.acceptType();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext1 = routeContext0.withResponseWrapper(responseWrapper0);
      RouteContext routeContext2 = routeContext1.withAcceptType("LK'|dUN!CVp(");
      RouteContext routeContext3 = routeContext2.withResponse(responseWrapper0);
      Body body0 = Body.create();
      RouteContext routeContext4 = routeContext2.withBody(body0);
      HttpMethod httpMethod0 = HttpMethod.post;
      RouteContext routeContext5 = routeContext3.withHttpMethod(httpMethod0);
      routeContext3.withBody(body0);
      RouteContext routeContext6 = routeContext5.withUri("");
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext6.withRequestWrapper(requestWrapper0);
      routeContext6.body();
      routeContext5.routeMatcher();
      routeContext4.withRequestWrapper(requestWrapper0);
      routeContext5.withHttpMethod(httpMethod0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.withResponse((Response) null);
      routeContext0.httpRequest();
      RouteContext routeContext1 = RouteContext.create();
      routeContext1.uri();
      Body body0 = Body.create();
      routeContext0.withBody(body0);
      routeContext1.withAcceptType((String) null);
      routeContext1.response();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      RouteContext routeContext2 = routeContext1.withUri("spark.Request");
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext3 = routeContext2.withMatcher(routes0);
      RouteContext routeContext4 = routeContext3.withAcceptType("");
      HttpMethod httpMethod0 = HttpMethod.options;
      RouteContext routeContext5 = routeContext4.withHttpMethod(httpMethod0);
      routeContext5.acceptType();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext1 = routeContext0.withMatcher(routes0);
      RouteContext routeContext2 = routeContext1.withUri("qo\"OEt>\\H.o9@[UL");
      routeContext2.requestWrapper();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.withHttpRequest((HttpServletRequest) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withUri("p");
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext2 = routeContext1.withMatcher(routes0);
      routeContext2.body();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withBody((Body) null);
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext2 = routeContext1.withMatcher(routes0);
      routeContext0.httpMethod();
      routeContext0.withUri("r174wu");
      routeContext2.routeMatcher();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext1 = routeContext0.withMatcher(routes0);
      Body body0 = Body.create();
      RouteContext routeContext2 = routeContext1.withBody(body0);
      RouteContext routeContext3 = routeContext2.withAcceptType((String) null);
      routeContext3.httpRequest();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext1 = routeContext0.withResponse(responseWrapper0);
      routeContext1.withUri((String) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      HttpMethod httpMethod0 = HttpMethod.before;
      RouteContext routeContext1 = routeContext0.withHttpMethod(httpMethod0);
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      RouteContext routeContext2 = routeContext1.withRequestWrapper(requestWrapper0);
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext3 = routeContext2.withResponseWrapper(responseWrapper0);
      routeContext3.responseWrapper();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext1 = routeContext0.withMatcher(routes0);
      Body body0 = Body.create();
      RouteContext routeContext2 = routeContext1.withBody(body0);
      routeContext2.acceptType();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      routeContext1.body();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext1 = routeContext0.withResponseWrapper(responseWrapper0);
      routeContext1.withResponse(responseWrapper0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withAcceptType("4vnbT0XV^Jc7iZ\"3H");
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      RouteContext routeContext2 = routeContext1.withRequestWrapper(requestWrapper0);
      routeContext2.requestWrapper();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.uri();
      HttpMethod httpMethod0 = HttpMethod.delete;
      routeContext0.withHttpMethod(httpMethod0);
      routeContext0.routeMatcher();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.response();
  }
}
